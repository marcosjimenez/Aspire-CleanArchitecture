@page "/contacts"
@using CleanArchitectureSample.Application.Dto.Response
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject ContactApiClient ContactApi

<PageTitle>Contacts</PageTitle>

<h1>Contacts</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (contacts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>LastName</th>
                <th>eMail</th>
                <th>Country</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in contacts)
            {
                <tr>
                    <td>@contact.Name</td>
                    <td>@contact.LastName</td>
                    <td>@contact.EMail</td>
                    <td>@contact.Country?.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ContactResponse[]? contacts;

    protected override async Task OnInitializedAsync()
    {
        contacts = await ContactApi.GetContactsAsync();
    }
}
